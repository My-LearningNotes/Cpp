C++类与const关键字
==================

在类中，如果你不希望某些数据被修改，可以使用const关键字加以限定。const可以用来修饰成员变量、成员函数以及对象。


const成员变量
-------------

const成员变量的用法和普通const变量的用法相似，只需要在声明时加上const关键字。
**初始化const成员变量只有一种方法，就是通过构造函数的参数初始化列表。**

.. note::

    const成员变量在初始化之后就不能再修改了，所以只能在构造对象时对其进行初始化，只能通过构造函数的初始化列表进行初始化。


const成员函数
-------------

**const成员函数可以使用类中的所有成员变量，但是不能修改它们的值**，这种措施主要是为了保护数据而设置的。const成员函数也称为常成员函数。

**常成员函数需要在声明和定义的时候在函数头部的结尾加上const关键字。**
如果只在一个地方加const会导致声明和定义处的函数原型冲突。

.. note::

    对于const成员函数，关键字const是函数原型的一部分。


const对象
---------

const也可以用来修饰对象，称为常对象。
**一旦将对象定义为常对象之后，就只能调用类的const成员了。**

定义常对象的语法和定义常量的语法类似:

.. code-block:: cpp 

    const class object(params);
    class const object(params);

当然也可以定义const指针:

.. code-block:: cpp 

    const class *p = new class(params);
    class const *p = new class(params);

``class``\ 为类名，\ ``object``\ 为对象名，\ ``params``\ 为实参列表，\ ``p``\ 为指针名。
这两种方式定义出来的对象都是常对象。

一旦将对象定义为常对象之后，不管是哪种形式，该对象就只能访问被const修饰的成员了(包括const成员变量和const成员函数)，因为非const成员可能会修改对象的数据(编译器也会这样假设)，C++禁止这样做。
